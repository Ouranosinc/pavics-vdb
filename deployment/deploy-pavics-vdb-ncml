#!/bin/sh
# Deploy NCML files under 1-Datasets/* to /data/ncml.
#
# Copy this file under /etc/cron.hourly to deploy every hour.
#
# Follow
# https://developer.github.com/v3/guides/managing-deploy-keys/#deploy-keys
# because this repo is private and we use SSH to clone.
#
# Had this repo been public, no deploy key setup required with HTTP.
#
# Logs to /var/log/PAVICS/deploy-ncml.log, re-use existing logrotate.


### CONFIG
DESCRIPTION="deploy-pavics-vdb-ncml"
LOG_DIR="/var/log/PAVICS"

if [ -z "$PAVICS_VDB_BRANCH" ]; then
    PAVICS_VDB_BRANCH="master"
fi

if [ -z "$PAVICS_VDB_DEPLOY_DEST" ]; then
    PAVICS_VDB_DEPLOY_DEST="/data/ncml"
fi

if [ -z "$PAVICS_VDB_SSH_DEPLOY_KEY" ]; then
    PAVICS_VDB_SSH_DEPLOY_KEY="/home/mourad/.ssh/id_rsa_pavics-vdb-ro"
fi
### CONFIG END


LOG_FILE="$LOG_DIR/$DESCRIPTION.log"
exec >>$LOG_FILE 2>&1

cleanup_on_exit() {
    rm -rf "$TMPDIR"
    set +x
    echo "
$DESCRIPTION finished START_TIME=$START_TIME
$DESCRIPTION finished   END_TIME=`date -Isecond`"
}

trap cleanup_on_exit EXIT

START_TIME="`date -Isecond`"
echo "==========
$DESCRIPTION START_TIME=$START_TIME"

set -x

TMPDIR="`mktemp -d -t ${DESCRIPTION}.XXXXXXXXXXXX`"



### SCRIPT START

cd $TMPDIR

TMP_SCRIPT="$TMPDIR/sshwrap"
cat << __EOF__ > $TMP_SCRIPT
#!/bin/sh
ssh -i $PAVICS_VDB_SSH_DEPLOY_KEY \
  -o 'UserKnownHostsFile /dev/null' \
  -o 'StrictHostKeyChecking no' \
 \$@
__EOF__
chmod a+x $TMP_SCRIPT

GIT_SSH="$TMP_SCRIPT" git clone git@github.com:Ouranosinc/pavics-vdb.git

cd pavics-vdb
git checkout $PAVICS_VDB_BRANCH

rsync --recursive --links --checksum --delete \
    --itemize-changes --human-readable --verbose \
    1-Datasets/* $PAVICS_VDB_DEPLOY_DEST/
